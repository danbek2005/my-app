{"ast":null,"code":"var _jsxFileName = \"/home/danil/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/React/my-app-local/src/Components/Content/Profile/ProfileContainer.jsx\";\nimport React, { useEffect } from 'react';\nimport Profile from './Profile.jsx';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getProfile, getPosts, setPost, updatePost, deletePost, updateLikesVal } from './../../../redux/profile-reducer';\nimport withAuthRedirect from './../../../HOC/withAuthRedirect.jsx';\nimport { compose } from 'redux';\n\nconst mapStateToProps = state => {\n  return {\n    profilePage: state.profilePage,\n    authId: state.auth.id,\n    id: state.profilePage.user.id,\n    isAuth: state.auth.isAuth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPost: data => {\n      dispatch(setPost(data));\n    },\n    getProfile: (url, authId) => {\n      dispatch(getProfile(url, authId));\n    },\n    getPosts: id => {\n      dispatch(getPosts(id));\n    },\n    updatePost: (text, postId) => {\n      dispatch(updatePost(text, postId));\n    },\n    deletePost: postId => {\n      dispatch(deletePost(postId));\n    },\n    updateLikesVal: data => {\n      dispatch(updateLikesVal(data));\n    }\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withRouter, withAuthRedirect)(props => {\n  useEffect(() => {\n    props.getProfile(props.location.pathname, props.authId);\n  }, [props.location.pathname]);\n\n  if (!props.profilePage.isPostHave && props.profilePage.user.id) {\n    props.getPosts(props.profilePage.user.id);\n  }\n\n  return React.createElement(Profile, {\n    id: props.id,\n    updateLikesVal: props.updateLikesVal,\n    profileId: props.profilePage.user.id,\n    deletePost: props.deletePost,\n    authId: props.authId,\n    updatePost: props.updatePost,\n    isPostHave: props.profilePage.isPostHave,\n    posts: props.profilePage.posts,\n    name: props.profilePage.user.name,\n    mail: props.profilePage.user.mail,\n    addPost: props.addPost,\n    img: props.profilePage.user.img,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  });\n});","map":{"version":3,"sources":["/home/danil/Рабочий стол/React/my-app-local/src/Components/Content/Profile/ProfileContainer.jsx"],"names":["React","useEffect","Profile","connect","withRouter","getProfile","getPosts","setPost","updatePost","deletePost","updateLikesVal","withAuthRedirect","compose","mapStateToProps","state","profilePage","authId","auth","id","user","isAuth","mapDispatchToProps","dispatch","addPost","data","url","text","postId","props","location","pathname","isPostHave","posts","name","mail","img"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport Profile from './Profile.jsx';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport {getProfile, getPosts, setPost, updatePost, deletePost, updateLikesVal} from './../../../redux/profile-reducer';\nimport withAuthRedirect from './../../../HOC/withAuthRedirect.jsx';\nimport {compose} from 'redux';\n\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tprofilePage: state.profilePage,\n\t\tauthId: state.auth.id,\n\t\tid: state.profilePage.user.id,\n\t\tisAuth: state.auth.isAuth\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\taddPost: (data) => {\n\t\t\tdispatch(setPost(data));\n\t\t},\n\t\tgetProfile: (url, authId) => {\n\t\t\tdispatch(getProfile(url, authId));\n\t\t},\n\t\tgetPosts: (id) => {\n\t\t\tdispatch(getPosts(id));\n\t\t},\n\t\tupdatePost: (text, postId) => {\n\t\t\tdispatch(updatePost(text, postId));\n\t\t},\n\t\tdeletePost: (postId) => {\n\t\t\tdispatch(deletePost(postId));\n\t\t},\n\t\tupdateLikesVal: (data) => {\n\t\t\tdispatch(updateLikesVal(data));\n\t\t}\n\t}\n}\n\n\nexport default compose(\n\tconnect(mapStateToProps, mapDispatchToProps), \n\twithRouter,\n\twithAuthRedirect\n)((props) => {\n\tuseEffect(() => {\n\t\tprops.getProfile(props.location.pathname, props.authId);\n\t}, [props.location.pathname]);\n\n\tif(!props.profilePage.isPostHave && props.profilePage.user.id){\n\t\tprops.getPosts(props.profilePage.user.id);\n\t}\n\t\t\treturn (\n\t\t\t\t<Profile \n\t\t\t\t\tid={props.id}\n\t\t\t\t\tupdateLikesVal={props.updateLikesVal} \n\t\t\t\t\tprofileId={props.profilePage.user.id} \n\t\t\t\t\tdeletePost={props.deletePost} \n\t\t\t\t\tauthId={props.authId} \n\t\t\t\t\tupdatePost={props.updatePost} \n\t\t\t\t\tisPostHave={props.profilePage.isPostHave} \n\t\t\t\t\tposts={props.profilePage.posts} \n\t\t\t\t\tname={props.profilePage.user.name} \n\t\t\t\t\tmail={props.profilePage.user.mail} \n\t\t\t\t\taddPost={props.addPost}\n\t\t\t\t\timg={props.profilePage.user.img}/>\n\t\t\t);\n});\n"]},"metadata":{},"sourceType":"module"}