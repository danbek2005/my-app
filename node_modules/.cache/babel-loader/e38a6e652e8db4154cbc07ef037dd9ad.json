{"ast":null,"code":"var _jsxFileName = \"/home/danil/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/React/my-app-local/src/Components/Content/Profile/profile-right/Posts.jsx\";\nimport React from 'react';\nimport PostContainer from './Post/PostContainer.jsx';\nimport PostForm from './PostForm.jsx';\nexport default React.memo(props => {\n  if (props.isPostHave) {\n    var postElements = props.posts.map(dialog => React.createElement(PostContainer, {\n      updateLikesVal: props.updateLikesVal,\n      deletePost: props.deletePost,\n      authId: props.authId,\n      profileId: props.profileId,\n      postId: dialog.postId,\n      users: dialog.users,\n      updatePost: props.updatePost,\n      id: props.id,\n      text: dialog.text,\n      user: props.name,\n      likes: dialog.likes,\n      dislikes: dialog.dislikes,\n      img: props.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }));\n  }\n\n  let postFormEl = props.profileId == props.authId ? React.createElement(PostForm, {\n    addPost: props.addPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }) : null;\n  return React.createElement(\"div\", {\n    className: \"Posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, postFormEl, postElements || null);\n}, (oldProps, newProps) => {\n  if (newProps == oldProps) {\n    return true;\n  }\n\n  return false;\n});","map":{"version":3,"sources":["/home/danil/Рабочий стол/React/my-app-local/src/Components/Content/Profile/profile-right/Posts.jsx"],"names":["React","PostContainer","PostForm","memo","props","isPostHave","postElements","posts","map","dialog","updateLikesVal","deletePost","authId","profileId","postId","users","updatePost","id","text","name","likes","dislikes","img","postFormEl","addPost","oldProps","newProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,eAAeF,KAAK,CAACG,IAAN,CAAYC,KAAD,IAAW;AACpC,MAAGA,KAAK,CAACC,UAAT,EAAoB;AACnB,QAAIC,YAAY,GAAGF,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAClBC,MAAM,IAAI,oBAAC,aAAD;AAAe,MAAA,cAAc,EAAEL,KAAK,CAACM,cAArC;AACH,MAAA,UAAU,EAAEN,KAAK,CAACO,UADf;AAEH,MAAA,MAAM,EAAEP,KAAK,CAACQ,MAFX;AAGH,MAAA,SAAS,EAAER,KAAK,CAACS,SAHd;AAIH,MAAA,MAAM,EAAEJ,MAAM,CAACK,MAJZ;AAKH,MAAA,KAAK,EAAEL,MAAM,CAACM,KALX;AAMH,MAAA,UAAU,EAAEX,KAAK,CAACY,UANf;AAOH,MAAA,EAAE,EAAEZ,KAAK,CAACa,EAPP;AAQH,MAAA,IAAI,EAAER,MAAM,CAACS,IARV;AASH,MAAA,IAAI,EAAEd,KAAK,CAACe,IATT;AAUH,MAAA,KAAK,EAAEV,MAAM,CAACW,KAVX;AAWH,MAAA,QAAQ,EAAEX,MAAM,CAACY,QAXd;AAYH,MAAA,GAAG,EAAEjB,KAAK,CAACkB,GAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADQ,CAAnB;AAeA;;AACD,MAAIC,UAAU,GAAGnB,KAAK,CAACS,SAAN,IAAmBT,KAAK,CAACQ,MAAzB,GAAkC,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAER,KAAK,CAACoB,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlC,GAAwE,IAAzF;AAEA,SACC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,UADF,EAEEjB,YAAY,IAAI,IAFlB,CADD;AAMA,CA1Bc,EA0BZ,CAACmB,QAAD,EAAWC,QAAX,KAAwB;AAC1B,MAAGA,QAAQ,IAAID,QAAf,EAAwB;AACvB,WAAO,IAAP;AACA;;AACD,SAAO,KAAP;AACA,CA/Bc,CAAf","sourcesContent":["import React from 'react';\nimport PostContainer from './Post/PostContainer.jsx';\nimport PostForm from './PostForm.jsx';\nexport default React.memo((props) => {\n\tif(props.isPostHave){\n\t\tvar postElements = props.posts.map(\n\t\t\tdialog => <PostContainer updateLikesVal={props.updateLikesVal} \n\t\t\t\t\t\t\t\t\t deletePost={props.deletePost} \n\t\t\t\t\t\t\t\t\t authId={props.authId} \n\t\t\t\t\t\t\t\t\t profileId={props.profileId} \n\t\t\t\t\t\t\t\t\t postId={dialog.postId} \n\t\t\t\t\t\t\t\t\t users={dialog.users} \n\t\t\t\t\t\t\t\t\t updatePost={props.updatePost} \n\t\t\t\t\t\t\t\t\t id={props.id} \n\t\t\t\t\t\t\t\t\t text={dialog.text} \n\t\t\t\t\t\t\t\t\t user={props.name} \n\t\t\t\t\t\t\t\t\t likes={dialog.likes} \n\t\t\t\t\t\t\t\t\t dislikes={dialog.dislikes}\n\t\t\t\t\t\t\t\t\t img={props.img}/>\n\t\t);\n\t}\n\tlet postFormEl = props.profileId == props.authId ? <PostForm addPost={props.addPost}/> : null\n\n\treturn (\n\t\t<div className=\"Posts\">\n\t\t\t{postFormEl}\n\t\t\t{postElements || null}\n\t\t</div>\n\t)\n}, (oldProps, newProps) => {\n\tif(newProps == oldProps){\n\t\treturn true;\n\t}\n\treturn false;\n});"]},"metadata":{},"sourceType":"module"}