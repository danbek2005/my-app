{"ast":null,"code":"import React from 'react';\nimport UsersWrapper from './UsersWrapper.jsx';\nimport { connect } from 'react-redux';\nimport API from '../../../API/api.js';\nimport { reqUsers } from './../../../redux/users-reducer.js';\nimport { changeFollow } from './../../../redux/users-reducer.js';\nimport { getFollows, getUsers, getPageSize, getTotalCount, getCurrentPage, getLoading, getFollowLoading, getName, getMail, getIsAuth, getId } from './../../../redux/users-selector.js';\n\nlet mapStateToProps = state => {\n  console.log('Users-Container');\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalCount: getTotalCount(state),\n    currentPage: getCurrentPage(state),\n    Loading: getLoading(state),\n    FollowLoading: getFollowLoading(state),\n    isAuth: getIsAuth(state),\n    authId: getId(state),\n    follows: getFollows(state)\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch({\n        type: 'FOLLOW',\n        userId: userId\n      });\n    },\n    unfollow: userId => {\n      dispatch({\n        type: 'UNFOLLOW',\n        userId: userId\n      });\n    },\n    setUsers: users => {\n      dispatch({\n        type: \"SET-USERS\",\n        users: users\n      });\n    },\n    changePage: currentPage => {\n      dispatch({\n        type: \"SET-CURRENT-PAGE\",\n        currentPage: currentPage\n      });\n    },\n    setTotalCount: totalCount => {\n      dispatch({\n        type: \"SET-TOTAL-COUNT\",\n        totalCount: totalCount\n      });\n    },\n    switchIsLoading: isLoading => {\n      dispatch({\n        type: \"SWITCH-IS-LOADING\",\n        isLoading: isLoading\n      });\n    },\n    reqUsers: (currentPage, pageSize, follows, isAuth) => {\n      dispatch(reqUsers(currentPage, pageSize, follows, isAuth));\n    },\n\n    changeFollow(text, authId, id) {\n      dispatch(changeFollow(text, authId, id));\n    }\n\n  };\n};\n\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersWrapper);\nexport default UsersContainer;","map":{"version":3,"sources":["/home/danil/Рабочий стол/React/my-app-local/src/Components/Content/Users/UsersContainer.js"],"names":["React","UsersWrapper","connect","API","reqUsers","changeFollow","getFollows","getUsers","getPageSize","getTotalCount","getCurrentPage","getLoading","getFollowLoading","getName","getMail","getIsAuth","getId","mapStateToProps","state","console","log","users","pageSize","totalCount","currentPage","Loading","FollowLoading","isAuth","authId","follows","mapDispatchToProps","dispatch","follow","userId","type","unfollow","setUsers","changePage","setTotalCount","switchIsLoading","isLoading","text","id","UsersContainer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport UsersWrapper from './UsersWrapper.jsx';\nimport {connect} from 'react-redux';\nimport API from '../../../API/api.js'; \nimport {reqUsers} from './../../../redux/users-reducer.js';\nimport {changeFollow} from './../../../redux/users-reducer.js';\nimport {getFollows, getUsers, getPageSize, getTotalCount, getCurrentPage, getLoading, getFollowLoading, getName, getMail, getIsAuth, getId} from './../../../redux/users-selector.js';\nlet mapStateToProps = (state) => {\n\tconsole.log('Users-Container');\n\treturn {\n\t\tusers: getUsers(state),\n\t\tpageSize: getPageSize(state), \n\t\ttotalCount: getTotalCount(state), \n\t\tcurrentPage: getCurrentPage(state), \n\t\tLoading: getLoading(state), \n\t\tFollowLoading: getFollowLoading(state),\n\t\tisAuth: getIsAuth(state), \n\t\tauthId: getId(state), \n\t\tfollows: getFollows(state) \n\t}\n}\n\n\n\nlet mapDispatchToProps = (dispatch) => {\n\n\treturn {\n\t\tfollow: (userId) => {\n\t\t\tdispatch({type: 'FOLLOW', userId: userId});\n\t\t},\n\t\tunfollow: (userId) => {\n\t\t\tdispatch({type: 'UNFOLLOW', userId: userId});\n\t\t},\n\t\tsetUsers: (users) => {\n\t\t\tdispatch({type: \"SET-USERS\", users: users}); \n\t\t},\n\t\tchangePage: (currentPage) => {\n\t\t\tdispatch({type: \"SET-CURRENT-PAGE\", currentPage: currentPage});\n\t\t},\n\t\tsetTotalCount: (totalCount) => {\n\t\t\tdispatch({type: \"SET-TOTAL-COUNT\", totalCount: totalCount}); \n\t\t},\n\t\tswitchIsLoading: (isLoading) => {\n\t\t\tdispatch({type: \"SWITCH-IS-LOADING\", isLoading: isLoading}); \n\t\t},\n\t\treqUsers: (currentPage, pageSize, follows, isAuth) => { \n\t\t\tdispatch(reqUsers(currentPage, pageSize, follows, isAuth));\n\t\t},\n\t\tchangeFollow(text, authId, id){ \n\t\t\tdispatch(changeFollow(text, authId, id));\n\t\t}\n\t}\n}\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersWrapper);\nexport default UsersContainer;"]},"metadata":{},"sourceType":"module"}